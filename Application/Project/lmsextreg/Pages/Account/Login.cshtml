@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-4">
        <section>
            <form method="post" autocomplete="off">
                <h4>Use your email address and password.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>:
                    <input asp-for="Input.Email" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>:
                    <input asp-for="Input.Password" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group" style="margin-bottom:0;">
                    <div style="margin-top:10px;padding:10px;border: 1px dotted #000;border-bottom:none;">
                        <p style="text-align:center;font-weight:bold;">Rules of Behavior</p>
                        <p>Users are accessing a U.S. Government information system; Information system usage may be monitored, recorded, and subject to audit; Unauthorized use of the information system is prohibited and subject to criminal and civil penalties; and Use of the information system indicates consent to monitoring and recording;</p>
                    </div> 
                </div>                
                <div class="required-field-block" style="margin-top:0;padding:10px;border: 1px dotted #000;"> 
                    <input asp-for="Input.RulesOfBehaviorAgreedTo" />
                    <label asp-for="Input.RulesOfBehaviorAgreedTo"></label>
                    <div class="required-icon"><div class="text">*</div></div> 
                    <br/>
                    <span asp-validation-for="Input.RulesOfBehaviorAgreedTo" class="text-danger"></span>
                </div>                 
                <div class="g-recaptcha" data-callback="recaptchaCallback" data-sitekey='@ViewData["ReCaptchaKey"]'></div>     
                <div class="form-group">
                    <button type="submit" id="lmsLoginButton" class="btn btn-primary" disabled>Log in</button>
                </div>
                <div class="form-group">
                    <p>
                        <a asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <!-- <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div> -->
</div>

@section Scripts {
    @await  Html.PartialAsync("_ValidationScriptsPartial")
    <script src='https://www.google.com/recaptcha/api.js'></script>
    <script>
        function recaptchaCallback() { $('#lmsLoginButton').removeAttr('disabled'); };
    </script>
    <script>
        // extend range validator method to treat checkboxes differently
        var defaultRangeValidator = $.validator.methods.range;
        $.validator.methods.range = function(value, element, param) {
            if(element.type === 'checkbox') {
                // if it's a checkbox return true if it is checked
                return element.checked;
            } else {
                // otherwise run the default validation function
                return defaultRangeValidator.call(this, value, element, param);
            }
        }
    </script>    
}
